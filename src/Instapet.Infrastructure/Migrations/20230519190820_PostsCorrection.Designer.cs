// <auto-generated />
using System;
using Instapet.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Instapet.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230519190820_PostsCorrection")]
    partial class PostsCorrection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0-preview.4.23259.3");

            modelBuilder.Entity("Instapet.Domain.Models.Comentario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateTime>("Horario")
                        .HasColumnType("timestamp")
                        .HasColumnName("horario");

                    b.Property<Guid>("IdPost")
                        .HasColumnType("TEXT")
                        .HasColumnName("id_post");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("TEXT")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("varchar(512)")
                        .HasColumnName("mensagem");

                    b.HasKey("Id");

                    b.HasIndex("IdPost");

                    b.HasIndex("IdUsuario");

                    b.ToTable("tb_comentario", (string)null);
                });

            modelBuilder.Entity("Instapet.Domain.Models.Curtida", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<Guid>("IdPost")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdPost");

                    b.HasIndex("IdUsuario");

                    b.ToTable("tb_curtida", (string)null);
                });

            modelBuilder.Entity("Instapet.Domain.Models.PedidoAmizade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<Guid>("RequerenteId")
                        .HasColumnType("TEXT")
                        .HasColumnName("requerente_id");

                    b.Property<Guid>("RequisitadoId")
                        .HasColumnType("TEXT")
                        .HasColumnName("requisitado_id");

                    b.HasKey("Id");

                    b.HasIndex("RequerenteId");

                    b.HasIndex("RequisitadoId");

                    b.ToTable("tb_pedido_amizade", (string)null);
                });

            modelBuilder.Entity("Instapet.Domain.Models.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateTime>("Horario")
                        .HasColumnType("timestamp")
                        .HasColumnName("horario");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("TEXT")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Legenda")
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("legenda");

                    b.Property<bool>("Privado")
                        .HasColumnType("bool")
                        .HasColumnName("privado");

                    b.Property<string>("UrlImagem")
                        .IsRequired()
                        .HasColumnType("varchar(512)")
                        .HasColumnName("urlImagem");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("tb_post", (string)null);
                });

            modelBuilder.Entity("Instapet.Domain.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Apelido")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apelido");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasColumnName("cpf");

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("dataNascimento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("HashSenha")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasColumnName("senha");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome");

                    b.Property<string>("UrlFotoPerfil")
                        .IsRequired()
                        .HasColumnType("varchar(512)")
                        .HasColumnName("urlFotoPerfil");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("tb_usuario", (string)null);
                });

            modelBuilder.Entity("Instapet.Domain.Models.UsuarioAmigo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AmigoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AmigoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioAmigos");
                });

            modelBuilder.Entity("Instapet.Domain.Models.Comentario", b =>
                {
                    b.HasOne("Instapet.Domain.Models.Post", "Post")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdPost")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instapet.Domain.Models.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Instapet.Domain.Models.Curtida", b =>
                {
                    b.HasOne("Instapet.Domain.Models.Post", "Post")
                        .WithMany("Curtidas")
                        .HasForeignKey("IdPost")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instapet.Domain.Models.Usuario", "Usuario")
                        .WithMany("Curtidas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Instapet.Domain.Models.PedidoAmizade", b =>
                {
                    b.HasOne("Instapet.Domain.Models.Usuario", "Requerente")
                        .WithMany("PedidosAmizadeEnviados")
                        .HasForeignKey("RequerenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instapet.Domain.Models.Usuario", "Requisitado")
                        .WithMany("PedidosAmizadeRecebidos")
                        .HasForeignKey("RequisitadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Requerente");

                    b.Navigation("Requisitado");
                });

            modelBuilder.Entity("Instapet.Domain.Models.Post", b =>
                {
                    b.HasOne("Instapet.Domain.Models.Usuario", "Usuario")
                        .WithMany("Posts")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Instapet.Domain.Models.UsuarioAmigo", b =>
                {
                    b.HasOne("Instapet.Domain.Models.Usuario", "Amigo")
                        .WithMany()
                        .HasForeignKey("AmigoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Instapet.Domain.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Amigo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Instapet.Domain.Models.Post", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Curtidas");
                });

            modelBuilder.Entity("Instapet.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Curtidas");

                    b.Navigation("PedidosAmizadeEnviados");

                    b.Navigation("PedidosAmizadeRecebidos");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
